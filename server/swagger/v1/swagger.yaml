---
swagger: '2.0'
info:
  title: API V1
  version: v1
paths:
  "/api/v1/signup/":
    post:
      summary: Create a new user
      tags:
      - redirects to api#create, allows creation of user
      consumes:
      - application/json
      parameters:
      - name: api_user
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
            username:
              type: string
            mentor:
              type: boolean
            mentee:
              type: boolean
            first_name:
              type: string
            last_name:
              type: string
            city:
              type: string
          required:
          - email
          - password_digest
          - username
          - mentor
          - mentee
      responses:
        '200':
          description: user created
        '422':
          description: user created
  "/api/v1/api_users/":
    get:
      summary: Displays all Users
      tags:
      - List all Users
      responses:
        '200':
          description: list users
  "/api/v1/api_users/{id}":
    get:
      summary: Retrieves a user
      tags:
      - Return a User
      consumes:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: user found
          schema:
            type: object
            properties:
              email:
                type: string
              username:
                type: string
              mentor:
                type: boolean
              mentee:
                type: boolean
            required:
            - email
            - username
            - mentor
            - mentee
        '404':
          description: interval not found
  "/api/v1/api_users/{api_user_id}/experiences/":
    get:
      summary: Displays all Experiences for a user
      tags:
      - List all Experiencess for a user
      consumes:
      - application/json
      parameters:
      - name: api_user_id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: list experiences
        '404':
          description: interval not found
  "/api/v1/api_users/{api_user_id}/experiences/{id}":
    get:
      summary: Displays Experience for a user
      tags:
      - List Experience for a user
      consumes:
      - application/json
      parameters:
      - name: api_user_id
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: find an experience belonging to a user
        '404':
          description: experience not found
  "/api/v1/profile/experiences/":
    get:
      summary: Display all experiences of user you are logged in as
      tags:
      - Display all experiences of a user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      responses:
        '422':
          description: no token
        '200':
          description: Display experiences current user logged in
    post:
      summary: Create an experience
      tags:
      - Create an experience for an API User
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: experience
        in: body
        schema:
          type: object
          properties:
            available_online:
              type: boolean
            available_offline:
              type: boolean
            qualification:
              type: string
            programminglanguage_id:
              type: integer
            meetinginterval_id:
              type: integer
          required:
          - qualification
          - programminglanguage_id
          - meetinginterval_id
      responses:
        '201':
          description: Experience created
        '422':
          description: invalid request
  "/api/v1/profile/experiences/{id}/":
    get:
      summary: Display a experience of user you are logged in as
      tags:
      - Display a experience of a user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: id
        in: path
        type: string
        required: true
      responses:
        '404':
          description: Experience not found
        '200':
          description: Display experience current user logged in
    delete:
      summary: Deletes  experience from user you are logged in as
      tags:
      - Delete experience from user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: id
        in: path
        type: string
        required: true
      responses:
        '204':
          description: experience deleted
        '404':
          description: experience not found
    patch:
      summary: Update an experience belonging to an API User
      tags:
      - Update an experience belonging to an APi User
      description: Note that if successful, you do not recieve the updated content
        back. You will only recieve a 204
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: id
        in: path
        type: string
        required: true
      - name: experience
        in: body
        schema:
          type: object
          properties:
            available_online:
              type: boolean
            available_offline:
              type: boolean
            qualification:
              type: string
            programminglanguage_id:
              type: integer
            meetinginterval_id:
              type: integer
          required:
          - qualification
          - programminglanguage_id
          - meetinginterval_id
      responses:
        '204':
          description: programming language updated
        '404':
          description: user not found
  "/api/v1/meetingintervals/":
    get:
      summary: Displays all Meeting Intervals
      tags:
      - List all Meeting Intervals
      responses:
        '200':
          description: list meeting intervals
    post:
      summary: Creates a meeting interval
      tags:
      - Create a  Meeting Interval
      consumes:
      - application/json
      parameters:
      - name: meetinginterval
        in: body
        schema:
          type: object
          properties:
            interval:
              type: string
          required:
          - interval
      responses:
        '201':
          description: inspect meeting interval creation
        '422':
          description: invalid request
  "/api/v1/meetingintervals/{id}":
    get:
      summary: Retrieves a meeting interval
      tags:
      - Return Meeting Interval
      consumes:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: meeting interval found
          schema:
            type: object
            properties:
              interval:
                type: string
            required:
            - interval
        '404':
          description: interval not found
    delete:
      summary: Deletes a meeting interval
      tags:
      - Delete Meeting Interval
      consumes:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '204':
          description: meeting interval deleted
        '404':
          description: interval not found
    patch:
      summary: Update a meeting interval
      tags:
      - Update Meeting Interval
      description: Note that if successful, you do not recieve the updated content
        back. You will only recieve a 204
      consumes:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: meetinginterval
        in: body
        schema:
          type: object
          properties:
            interval:
              type: string
          required:
          - interval
      responses:
        '204':
          description: programming interval updated
        '404':
          description: interval not found
  "/api/v1/profile/":
    get:
      summary: Display user you are logged in as
      tags:
      - Display user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      responses:
        '422':
          description: no token
        '200':
          description: Display current user logged in
    delete:
      summary: You can only delete a user that you are logged in as
      tags:
      - Delete user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      responses:
        '422':
          description: no token
        '200':
          description: Delete user currently logged in
    patch:
      summary: You can only update the user you are logged in as
      tags:
      - Update the user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: api_user
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
            password_digest:
              type: string
            username:
              type: string
            mentor:
              type: boolean
            mentee:
              type: boolean
            first_name:
              type: string
            last_name:
              type: string
            city:
              type: string
          required: []
      responses:
        '200':
          description: User updated
        '422':
          description: no token
  "/api/v1/programminglanguages/":
    get:
      summary: Displays all Programming Languages
      tags:
      - List all Programming Languages
      responses:
        '200':
          description: list programming languages
    post:
      summary: Creates a programming language
      tags:
      - Create a  Programming Language
      consumes:
      - application/json
      parameters:
      - name: programminglanguage
        in: body
        schema:
          type: object
          properties:
            language:
              type: string
          required:
          - language
      responses:
        '201':
          description: inspect programming lanaguage creation
        '422':
          description: invalid request
  "/api/v1/programminglanguages/{id}":
    get:
      summary: Retrieves a programming language
      tags:
      - Return Programming Language
      consumes:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: programming language found
          schema:
            type: object
            properties:
              language:
                type: string
            required:
            - language
        '404':
          description: interval not found
    delete:
      summary: Deletes a programming language
      tags:
      - Delete Programmimg Language
      consumes:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        '204':
          description: pogramming language deleted
        '404':
          description: language not found
    patch:
      summary: Update a programming language
      tags:
      - Update Programming Language
      description: Note that if successful, you do not recieve the updated content
        back. You will only recieve a 204
      consumes:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
      - name: programminglanguage
        in: body
        schema:
          type: object
          properties:
            language:
              type: string
          required:
          - language
      responses:
        '204':
          description: programming language updated
        '404':
          description: language not found
  "/api/v1/api_users/{api_user_id}/wishes/":
    get:
      summary: Displays all Wishes for a particular user
      tags:
      - List all Wishes for a particular user
      consumes:
      - application/json
      parameters:
      - name: api_user_id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: list wishes
        '404':
          description: User not found
  "/api/v1/api_users/{api_user_id}/wishes/{id}":
    get:
      summary: Displays a Wish for a particular user
      tags:
      - List a Wish for a particular user
      consumes:
      - application/json
      parameters:
      - name: api_user_id
        in: path
        type: string
        required: true
      - name: id
        in: path
        type: string
        required: true
      responses:
        '200':
          description: list wish
        '404':
          description: Wish not found
  "/api/v1/profile/wishes/":
    get:
      summary: Display all  wishes of user you are logged in as
      tags:
      - Display all wishes of a user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      responses:
        '422':
          description: no token
        '200':
          description: Display wishes current user logged in
    post:
      summary: Create a wish for user you are logged in as
      tags:
      - Create a wish for user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: wish
        in: body
        schema:
          type: object
          properties:
            available_online:
              type: boolean
            available_offline:
              type: boolean
            goal:
              type: string
            programminglanguage_id:
              type: integer
            meetinginterval_id:
              type: integer
          required:
          - goal
          - programminglanguage_id
          - meetinginterval_id
      responses:
        '201':
          description: Wish created
        '422':
          description: invalid request
  "/api/v1/profile/wishes/{id}/":
    get:
      summary: Display a wish of user you are logged in as
      tags:
      - Display a wish of a user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: id
        in: path
        type: string
        required: true
      responses:
        '404':
          description: Wish not found
        '200':
          description: Display wishes current user logged in
    delete:
      summary: Deletes  wish from user you are logged in as
      tags:
      - Delete wish from user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: id
        in: path
        type: string
        required: true
      responses:
        '204':
          description: wish deleted
        '404':
          description: wish not found
    patch:
      summary: Update a wish belonging to user you are logged in as
      tags:
      - Update a wish belonging to user you are logged in as
      consumes:
      - application/json
      parameters:
      - name: authorization
        in: header
        type: string
      - name: id
        in: path
        type: string
        required: true
      - name: wish
        in: body
        schema:
          type: object
          properties:
            available_online:
              type: boolean
            available_offline:
              type: boolean
            goal:
              type: string
            programminglanguage_id:
              type: integer
            meetinginterval_id:
              type: integer
          required:
          - goal
          - programminglanguage_id
          - meetinginterval_id
      responses:
        '204':
          description: programming language updated
        '404':
          description: user not found
